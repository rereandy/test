// Code generated by model. DO NOT EDIT.

package main

import (
	"github.com/rereandy/model-gen/db"
)

type tAdUgYybTypeInfoModel interface {
	Insert(entity *TAdUgYybTypeInfoEntity) int64
}

type TAdUgYybTypeInfoEntity struct {
	ID       int64  `db:"id"`
	Material string `db:"material"`
	Type     string `db:"type"`

	updateInfo map[string]interface{}
}

const (
	tableTAdUgYybTypeInfo = "t_ad_ug_yyb_type_info"
)

type TAdUgYybTypeInfoImpl struct {
	Connection *db.Connection `inject:"test"`
}

func (e *TAdUgYybTypeInfoEntity) set(k string, v interface{}) {
	if e.updateInfo == nil {
		e.updateInfo = map[string]interface{}{}
	}

	e.updateInfo[k] = v
}

func (e *TAdUgYybTypeInfoEntity) SetID(v interface{}) *TAdUgYybTypeInfoEntity {
	e.set("id", v)
	return e
}

func (e *TAdUgYybTypeInfoEntity) SetMaterial(v interface{}) *TAdUgYybTypeInfoEntity {
	e.set("material", v)
	return e
}

func (e *TAdUgYybTypeInfoEntity) SetType(v interface{}) *TAdUgYybTypeInfoEntity {
	e.set("type", v)
	return e
}

// 生成rows
var columnsTAdUgYybTypeInfoFields = []string{
	"id",
	"material",
	"type",
}

type columnsTAdUgYybTypeInfoType struct {
	ID       string
	Material string
	Type     string
}

var columnsTAdUgYybTypeInfo = columnsTAdUgYybTypeInfoType{
	ID:       "id",
	Material: "material",
	Type:     "type",
}

func (e *TAdUgYybTypeInfoImpl) Insert(entity *TAdUgYybTypeInfoEntity) int64 {
	session := e.Connection.NewSession()
	r, err := session.InsertInto(tableTAdUgYybTypeInfo).
		Columns(columnsTAdUgYybTypeInfoFields...).
		Record(entity).Exec()
	if err != nil {
		panic(err)
	}
	n, err := r.RowsAffected()
	if err != nil {
		panic(err)
	}
	return n
}
